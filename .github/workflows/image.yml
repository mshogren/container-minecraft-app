name: image CI/CD

on:
  push:
    branches: [ master ]
    paths:
      - 'Dockerfile'
      - '.dockerignore'
      - 'api/**'
      - 'app/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'Dockerfile'
      - '.dockerignore'
      - 'api/**'
      - 'app/**'

  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      api: ${{ steps.filter.outputs.api }}
      app: ${{ steps.filter.outputs.app }}

    steps:
    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          api:
            - 'api/**'
          app:
            - 'app/**'

  test-api:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: install pipenv
        run: pip install pipenv

      - uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pipenv'

      - name: install dependencies
        run: pipenv install --dev --deploy

      - name: lint with pylint
        run: pipenv run pylint *.py **/*.py

      - name: lint the graphql schema
        run: pipenv run strawberry export-schema main | npx graphql-schema-linter -s -e relay-page-info-spec

      - name: test with pytest
        run: pipenv run pytest


  test-app:
    needs: changes
    if: ${{ needs.changes.outputs.app == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: lint
        run: npm run lint

      - name: test
        run: npm run test -- run

      - name: compile
        run: npm run build

  release:
    needs: [test-api, test-app]
    if: always() && !contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2

      - name: Build and export Docker image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4
        with:
          context: .
          load: true
          tags: containerminecraftapp:test
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: End-to-end tests
        uses: cypress-io/github-action@v5
        env:
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
        with:
          working-directory: ./app
          start: docker run -p 8000:80 -e CURSEFORGE_API_KEY -v /var/run/docker.sock:/var/run/docker.sock containerminecraftapp:test
          browser: chrome

      - name: Conventional Changelog Action
        id: changelog
        if: github.event_name == 'push'
        uses: TriPSs/conventional-changelog-action@b7f32a8347e86c26ea2f4823cc7c160b9014c6a0 # v3
        with:
          github-token: ${{ secrets.github_token }}
          output-file: "false"
          skip-commit: "true"
          config-file-path: "./changelog.config.js"

      - name: Log in to the Container registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.changelog.outputs.tag }}

      - name: Build and push Docker image
        id: package
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

      - name: Create Release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # renovate: tag=v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: |
            Get the image:
            ```
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.changelog.outputs.version }}
            ```

            Run the image:
            ```
            docker run -d -p 8000:80 -e CURSEFORGE_API_KEY="<Replace with your own CurseForge API Key>" -v /var/run/docker.sock:/var/run/docker.sock ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.changelog.outputs.version }}
            ```

            ${{ steps.changelog.outputs.clean_changelog }}


